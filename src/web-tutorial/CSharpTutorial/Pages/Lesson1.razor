@page "/lesson1"
@using CSharpTutorial.Components

<PageTitle>Lesson 1: Hello World</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1>üéØ Lesson 1: Program Structure and Basic Syntax</h1>
            <p class="lead">Master the fundamental structure of C# programs and understand program flow - essential for OCR A-Level Computer Science.</p>
            <div class="alert alert-primary">
                <strong>OCR Specification Links:</strong> Programming fundamentals, program structure, input/output operations
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h3>üìù Interactive Code Editor</h3>
            <p>Try editing and running this C# code! Understanding program structure is fundamental to the OCR specification.</p>
            
            <CodeEditor Title="Hello World Program" 
                       InitialCode="@helloWorldCode" 
                       Height="350px" 
                       OnCodeChanged="OnCodeChanged" />
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <h3>üîç Understanding the Code</h3>
            <div class="accordion" id="codeExplanation">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse1">
                            <code>using System;</code>
                        </button>
                    </h2>
                    <div id="collapse1" class="accordion-collapse collapse show">
                        <div class="accordion-body">
                            This tells C# we want to use built-in features like <code>Console.WriteLine</code>. 
                            Think of it like importing a toolbox with useful tools.
                        </div>
                    </div>
                </div>
                
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse2">
                            <code>class Program</code>
                        </button>
                    </h2>
                    <div id="collapse2" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            Every C# program needs at least one class. Think of it as a container for your code. 
                            We named ours "Program" but you could call it anything.
                        </div>
                    </div>
                </div>

                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse3">
                            <code>static void Main(string[] args)</code>
                        </button>
                    </h2>
                    <div id="collapse3" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            This is the entry point - where your program starts running. When you run your program, 
                            it looks for this Main method and starts executing the code inside it.
                        </div>
                    </div>
                </div>

                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse4">
                            <code>Console.WriteLine("Hello, World!");</code>
                        </button>
                    </h2>
                    <div id="collapse4" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            This displays text on the screen. The text must be surrounded by double quotes, 
                            and don't forget the semicolon at the end!
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <h3>üéÆ Try It Yourself!</h3>
            
            <div class="card mb-3">
                <div class="card-body">
                    <h5>Exercise 1: Personal Greeting</h5>
                    <p>Edit the code below to display your own name instead of "Hello, World!"</p>
                    
                    <CodeEditor Title="Personal Greeting Exercise" 
                               InitialCode="@personalGreetingCode" 
                               Height="250px" />
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5>Exercise 2: Multiple Messages</h5>
                    <p>Try adding more Console.WriteLine statements to tell a short story!</p>
                    
                    <CodeEditor Title="Story Exercise" 
                               InitialCode="@storyCode" 
                               Height="300px" />
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="d-flex justify-content-between">
                <a href="/" class="btn btn-outline-secondary">‚Üê Back to Home</a>
                <a href="lesson2" class="btn btn-primary">Next: Variables ‚Üí</a>
            </div>
        </div>
    </div>
</div>

@code {
    private string helloWorldCode = @"using System;

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine(""Hello, World!"");
        
        // Try editing this code!
        // Add your own Console.WriteLine statements below:
        
    }
}";

    private string personalGreetingCode = @"using System;

class Program
{
    static void Main(string[] args)
    {
        // Change ""World"" to your own name!
        Console.WriteLine(""Hello, World!"");
        
        // You can also use variables:
        string name = ""Your Name Here"";
        Console.WriteLine(""Hello, "" + name + ""!"");
    }
}";

    private string storyCode = @"using System;

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine(""Once upon a time..."");
        Console.WriteLine(""There was a student learning C#."");
        
        // Add more lines to continue the story!
        // Console.WriteLine(""They discovered that programming was..."");
        // Console.WriteLine(""And they lived happily ever after!"");
    }
}";

    private void OnCodeChanged(string code)
    {
        // Handle code changes if needed
        // This could be used for analytics or saving progress
    }
}
